p=[
2	1.8	40	10.85
1.51	0.5	55	12.85
4.01	0.5	30	14.13
2.5	0.4	70	12.62
4.01	0.5	50	14.13
3	1	30	12.85
3.62	1	50	11.62
2	1	30	12.85
1.95	1.2	40	11.62
3.78	0.6	20	12.5
3.78	1	70	11.5
3	0.5	40	10.62
1.23	1.5	30	12.37
2.64	1.3	65	11.62
3	1.7	60	12.37
2.5	1	30	12.85
2.04	1.6	50	12.85
2.5	1	50	11.62
2	1.5	30	12.37
1.73	1.8	45	14.13
2.5	1.5	30	12.37
2.5	0.5	30	14.13
3.29	2	60	11.37
3	1.9	55	12.85
2.5	0.5	25	14.15
2	1.6	60	12.37
1.45	1.5	35	14.12
1.75	0.5	45	12.37
2	1	50	11.62
1.83	1.2	55	13.47
3	1	50	11.62
2	0.5	30	14.13
1.48	1	30	12.85
1.62	1	50	11.62
3	1.5	30	12.37
2.2	1.2	70	11.5
1.45	1	70	11.5
3.78	1	30	12.85
1.73	0.5	30	14.13
2	1	70	11.5
3	1	70	11.5
1.23	1.5	40	13.5
2.5	1.5	50	12.7
1.68	0.7	35	12.85
2	1	60	12.62
3	1.2	40	12.5
1.48	0.7	30	14.15
2.5	1	70	11.5
3.29	1.5	30	12.37
3	0.5	30	14.13
]; 
t=[
0.881
1.062
0.559
0.631
0.46
0.565
0.479
0.81
0.782
0.617
0.402
0.791
1.023
0.504
0.534
0.656
0.635
0.588
0.769
0.805
0.677
0.801
0.775
0.613
0.863
0.608
0.955
1.004
0.724
0.705
0.516
1.042
1.054
0.891
0.632
0.564
0.786
0.491
1.189
0.632
0.451
0.972
0.54
1.028
0.633
0.499
1.236
0.516
0.619
0.683
]; 
p=p'; 
[p,ps1]=mapminmax(p,0,1); 
t=t'; 
[m,n]=size(p); 
P =p (:,1:n-10); 
P_test=p (:,n-9:n); 
[m,n]=size(t);
T =t(:,1:n-10); 
T_test=t(:,n-9:n); 
hiddennum=9;
threshold=[0 1;0 1;0 1;0 1;0 1;0 1;0 1;0 1;0 1;0 1;0 1;0 1;0 1;0 1;0 1];
inputnum=size(P,1);       
outputnum=size(T,1);      
w1num=inputnum*hiddennum; 
w2num=outputnum*hiddennum; 
N=w1num+hiddennum+w2num+outputnum; 
NIND=20;    
MAXGEN=50; 
PRECI=10; 
GGAP=0.95; 
px=0.7; 
pm=0.01; 
trace=zeros(N+1,MAXGEN);                        

FieldD=[repmat(PRECI,1,N);repmat([-0.5;0.5],1,N);repmat([1;0;1;1],1,N)];                     
Chrom=crtbp(NIND,PRECI*N);                      
gen=0;                                
X=bs2rv(Chrom,FieldD); 
ObjV=Objfun(X,P,T,hiddennum,P_test,T_test);
while gen<MAXGEN
   fprintf('%d\n',gen)
   FitnV=ranking(ObjV); 
   SelCh=select('sus',Chrom,FitnV,GGAP); 
   SelCh=recombin('xovsp',SelCh,px);
   SelCh=mut(SelCh,pm); 
   X=bs2rv(SelCh,FieldD); 
   ObjVSel=Objfun(X,P,T,hiddennum,P_test,T_test); 
   [Chrom,ObjV]=reins(Chrom,SelCh,1,1,ObjV,ObjVSel); 
   X=bs2rv(Chrom,FieldD);
   gen=gen+1; 
      [Y,I]=min(ObjV);
   trace(1:N,gen)=X(I,:); 
   trace(end,gen)=Y;
end
figure(1);
plot(1:MAXGEN,trace(end,:));
grid on
xlabel(' Genetic algebra ')
ylabel(' Variation of error ')
title(' evolutionary process ')
bestX=trace(1:end-1,end);
bestErr=trace(end,end);
fprintf([' Optimal initial weight and threshold:\nX=',num2str(bestX'),'\n err=',num2str(bestErr),'\n'])
inputnum=size(P,1); 
outputnum=size(T,1);
net= newelm(minmax(P),[hiddennum,outputnum],{'tansig','purelin'},'traingdm');
net.trainParam.show = 50;
net.trainParam.lr = 0.01;
net.trainParam.mc = 0.9;
net.trainParam.epochs =10000; 
net.trainParam.goal = 1e-3; 
w1num=inputnum*hiddennum; 
w2num=outputnum*hiddennum; 
w1=bestX(1:w1num); 
B1=bestX(w1num+1:w1num+hiddennum); 
w2=bestX(w1num+hiddennum+1:w1num+hiddennum+w2num); 
B2=bestX(w1num+hiddennum+w2num+1:w1num+hiddennum+w2num+outputnum);
net.iw{1,1}=reshape(w1,hiddennum,inputnum);
net.lw{2,1}=reshape(w2,outputnum,hiddennum);
net.b{1}=reshape(B1,hiddennum,1);
net.b{2}=reshape(B2,outputnum,1);
net=train(net,P,T);
disp(['2、Using optimized weights and thresholds '])
disp(' Test sample prediction results：')
t_train=sim(net,P)
t_test=sim(net,P_test)
w1=net.iw{1,1} 
theta1=net.b{1} 
w2=net.lw{2,1} 
theta2=net.b{2} 
trace(end,:)
MAXGEN
